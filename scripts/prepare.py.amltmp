
import argparse
import os
import sklearn
import pandas as pd 
import numpy as np
from azureml.core import  Workspace
from sklearn.metrics import f1_score,accuracy_score
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.ensemble import RandomForestClassifier
from azureml.core import Run, Dataset
from sklearn.preprocessing import LabelEncoder

def main():
    
    run = Run.get_context()
    ws = run.experiment.workspace
    ds_tr = ws.get_default_datastore()

    df = run.input_datasets['raw_data'].to_pandas_dataframes()

    y = df['diagnosis'].astype('category')
    X = df.drop('diagnosis',axis=1)

    lbl_encoder = LabelEncoder()
    y_encode = lbl_encoder.fit_transform(y)

    print("cols:",X.columns)
    print("X shape", X.shape)
    print("encoder:", lbl_encoder.classes_)
    print("y encode:", y_encode.shape)

    x_train,x_test,y_train,y_test = train_test_split(X,y_encode,train_size=0.75,random_state=42,stratify =y_encode)

    print(x_train.shape)
    print(y_train.shape)

    print(x_test.shape)
    print(y_test.shape)

    train = np.column_stack([x_train,y_train])
    test = np.column_stack([x_test,y_test])
   
    # Write the model to file.
    train_path = "./data/train/"
    test_path = "./data/test/"

    os.makedirs(train_path, exist_ok=True)
    os.makedirs(test_path, exist_ok=True)
    print("Saving the split")

    np.savetxt(os.path.join(train_path,"train.csv"), train, delimiter=",")
    np.savetxt(os.path.join(test_path,"test.csv"), train, delimiter=",")
  
    #target_train = (ds_tr,"train_cancer_data")
    #target_test  = (ds_tr,"test_cancer_data")

    
    #ds_tr.upload(src_dir=train_path,target_path='train_cancer_data',overwrite=True,show_progress=True)
    #ds_tr.upload(src_dir=test_path,target_path='test_cancer_data',overwrite=True,show_progress=True)

    #ds_train = Dataset.File.upload_directory(src_dir=train_path,target=target_train,overwrite=True,show_progress=True)
    #ds_test = Dataset.File.upload_directory(src_dir=test_path,target=target_test,overwrite=True,show_progress=True)

    #ds_train.register(workspace=ws,name='train_cancer')
    #ds_test.register(workspace=ws,name='test_cancer')

 
if __name__ =='__main__':
    main()


